group_by(event_type) %>%
summarise(runs=sum(inning_max_score-bat_score_before)) %>%
ungroup()
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(event_type) %>%
summarise(n=n(),runs=sum(inning_max_score-bat_score_before)) %>%
ungroup()
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(event_type) %>%
summarise(n=n(),runs=sum(inning_max_score-bat_score_before),ave_runs=runs/n) %>%
ungroup()
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(event_type) %>%
summarise(n=n(),runs=sum(inning_max_score-bat_score_before),ave_runs=runs/n) %>%
arrange(desc(ave_runs)) %>%
ungroup()
#creating a run expectancy table
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(outs_before,basecode_before) %>%
summarise(runs=mean(inning_max_score-bat_score_before)) %>%
ungroup()
#recreating the run expextancy table from the book
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(event_type) %>%
summarise(n=n(),runs=sum(inning_max_score-bat_score_before),ave_runs=runs/n) %>%
arrange(desc(ave_runs)) %>%
ungroup()
#creating a run expectancy table
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(outs_before,basecode_before) %>%
summarise(runs=mean(inning_max_score-bat_score_before)) %>%
ungroup()
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot"))
#creating a run expectancy table
retable<-left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(outs_before,basecode_before) %>%
summarise(runs=mean(inning_max_score-bat_score_before)) %>%
ungroup()
View(retable)
#creating a run expectancy table
retable<-left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(outs_before,basecode_before) %>%
summarise(re=mean(inning_max_score-bat_score_before)) %>%
ungroup()
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL") %>%
select(event_type,outs_before,basecode_before),
retable,
by=c(outs_before,basecode_before))
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL") %>%
select(event_type,outs_before,basecode_before),
retable,
by=c("outs_before","basecode_before"))
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL") %>%
select(event_type,outs_before,basecode_before),
retable,
by=c("outs_before","basecode_before")) %>%
group_by(outs_before,basecode_before) %>%
summarise(starting_re=mean(inning_max_score-bat_score_before)) %>%
ungroup()
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL") %>%
select(event_type,outs_before,basecode_before),
retable,
by=c("outs_before","basecode_before")) %>%
group_by(outs_before,basecode_before) %>%
summarise(starting_re=mean(re)) %>%
ungroup()
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL") %>%
select(event_type,outs_before,basecode_before),
retable,
by=c("outs_before","basecode_before")) %>%
group_by(event_type) %>%
summarise(starting_re=mean(re)) %>%
ungroup()
#recreating the run expextancy table from the book
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(event_type) %>%
summarise(n=n(),runs=sum(inning_max_score-bat_score_before),ave_runs=runs/n) %>%
arrange(desc(ave_runs)) %>%
ungroup()
#recreating the run expextancy table 1 from The Book
RE_T1<-left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(event_type) %>%
summarise(n=n(),runs=sum(inning_max_score-bat_score_before),ave_runs=runs/n) %>%
arrange(desc(ave_runs)) %>%
ungroup()
starting_re <- left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL") %>%
select(event_type,outs_before,basecode_before),
retable,
by=c("outs_before","basecode_before")) %>%
group_by(event_type) %>%
summarise(starting_re=mean(re)) %>%
ungroup()
View(RE_T1)
#recreating the run expextancy table 2 from The Book
left_join(RE_T1,
starting_re,
by=c("event_type"))
#recreating the run expextancy table 2 from The Book
RE_T1 <- left_join(RE_T1,
starting_re,
by=c("event_type"))
#recreating the run expextancy table 1 from The Book
RE_T1<-left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(event_type) %>%
summarise(n=n(),runs=sum(inning_max_score-bat_score_before),ave_runs=runs/n) %>%
arrange(desc(ave_runs)) %>%
ungroup()
#recreating the run expextancy table 2 from The Book
RE_T2 <- left_join(RE_T1,
starting_re,
by=c("event_type"))
#recreating the run expextancy table 3 from The Book
left_join(RE_T1,
starting_re,
by=c("event_type")) %>%
mutate(run_value=(ave_runs-starting_re))
#recreating the run expextancy table 3 from The Book
left_join(RE_T1,
starting_re,
by=c("event_type")) %>%
mutate(run_value=(ave_runs-starting_re)) %>%
arrange(dec(run_value))
#recreating the run expextancy table 3 from The Book
left_join(RE_T1,
starting_re,
by=c("event_type")) %>%
mutate(run_value=(ave_runs-starting_re)) %>%
arrange(desc(run_value))
#recreating the run expextancy table 2 from The Book
RE_T2 <- left_join(RE_T1,
starting_re,
by=c("event_type"))
#recreating the run expextancy table 3 from The Book
left_join(RE_T2,
starting_re,
by=c("event_type")) %>%
mutate(run_value=(ave_runs-starting_re)) %>%
arrange(desc(run_value)) %>%
#run value table for the 2021 season
runvalue<-plays1 %>% mutate() %>% group_by(event_type) %>%
summarise(n=n(),tot_runs=sum(runs),mean_runs=mean(runs)) %>%
arrange(desc(mean_runs))
#recreating the run expextancy table 3 from The Book
left_join(RE_T2,
starting_re,
by=c("event_type")) %>%
mutate(run_value=(ave_runs-starting_re)) %>%
arrange(desc(run_value))
#recreating the run expextancy table 2 from The Book
RE_T2 <- left_join(RE_T1,
starting_re,
by=c("event_type"))
#recreating the run expextancy table 3 from The Book
left_join(RE_T2,
starting_re,
by=c("event_type")) %>%
mutate(run_value=(ave_runs-starting_re)) %>%
arrange(desc(run_value))
#recreating the run expextancy table 3 from The Book
left_join(RE_T2,
starting_re,
by=c("event_type")) %>%
mutate(run_value=(ave_runs-starting_re))
#recreating the run expextancy table 3 from The Book
left_join(RE_T2,
starting_re,
by=c("event_type")) %>%
mutate(run_value=ave_runs-starting_re)
#recreating the run expextancy table 1 from The Book
RE_T1<-left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(event_type) %>%
summarise(n=n(),runs=sum(inning_max_score-bat_score_before),ave_runs=runs/n) %>%
arrange(desc(ave_runs)) %>%
ungroup()
View(RE_T1)
View(RE_T2)
#recreating the run expextancy table 2 from The Book
RE_T2 <- left_join(RE_T1,
starting_re,
by=c("event_type"))
#recreating the run expextancy table 3 from The Book
left_join(RE_T2,
starting_re,
by=c("event_type")) %>%
mutate(run_value=ave_runs-starting_re)
#recreating the run expextancy table 3 from The Book
left_join(RE_T2,
starting_re,
by=c("event_type")) %>%
mutate(run_value=(ave_runs-starting_re))
#recreating the run expextancy table 3 from The Book
left_join(RE_T1,
starting_re,
by=c("event_type")) %>%
mutate(run_value=(ave_runs-starting_re))
left_join(RE_T1,
starting_re,
by=c("event_type"))
left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(event_type) %>%
summarise(n=n(),runs=sum(inning_max_score-bat_score_before),ave_runs=runs/n) %>%
arrange(desc(ave_runs)) %>%
ungroup()
#recreating the run expextancy table 3 from The Book
RE_T2 %>% mutate(run_value=(ave_runs-starting_re))
#recreating the run expextancy table 3 from The Book
RE_T2 %>% mutate(run_value=(ave_runs-starting_re)) %>%
arrange(desc(run_value))
#recreating the run expextancy table 3 from The Book
RE_T2 %>% mutate(run_value=(ave_runs-starting_re)) %>%
arrange(desc(run_value)) %>%
gt()
#recreating the run expextancy table 3 from The Book
RE_T2 %>% mutate(run_value=(ave_runs-starting_re)) %>%
arrange(desc(run_value)) %>%
gt() %>%
fmt_number(
columns = c("ave_runs", "starting_re","run_value"),
decimals = 2,
)
df<-read_csv('/Users/jimauer/R/strikeouts/statcast.csv')
#making a table of the max score to end each inning
maxinningscore <- plays %>% group_by(gameid,inning,inning_topbot) %>%
summarise(inning_max_score=max(post_bat_score))
#formatting data
format_statcast<-function(data){
df1<- data %>%
mutate(pitch_type = ifelse(pitch_type == "", "UN", pitch_type),
# expand game_type codes for clarity
game_type = case_when(
game_type == "E" ~ "Exhibition",
game_type == "S" ~ "Spring Training",
game_type == "R" ~ "Regular Season",
game_type == "F" ~ "Wild Card",
game_type == "D" ~ "Divisional Series",
game_type == "L" ~ "League Championship Series",
game_type == "W" ~ "World Series"),
# create binary handedness indicators
is_lhb = ifelse(stand == "L", "1", "0"),
is_lhp = ifelse(p_throws == "L", "1", "0"),
# create fielderid to accompany hit_location, giving the
fielderid = case_when(
hit_location == "1" ~ as.character(pitcher),
hit_location == "2" ~ as.character(fielder_2),
hit_location == "3" ~ as.character(fielder_3),
hit_location == "4" ~ as.character(fielder_4),
hit_location == "5" ~ as.character(fielder_5),
hit_location == "6" ~ as.character(fielder_6),
hit_location == "7" ~ as.character(fielder_7),
hit_location == "8" ~ as.character(fielder_8),
hit_location == "9" ~ as.character(fielder_9)),
fielderid = as.numeric(fielderid),
# binary inning half indicator
is_bottom = ifelse(inning_topbot == "Bot", "1", "0"),
# add spray angle
spray_angle = round(atan((hc_x-125.42)/(198.27-hc_y))*180/pi*.75, 1),
# standardize team abbreviations (some deprecated)
home_team = case_when(
home_team == "FLA" ~ "MIA",
home_team == "KC" ~ "KCR",
home_team == "SD" ~ "SDP",
home_team == "SF" ~ "SFG",
home_team == "TB" ~ "TBR",
TRUE ~ home_team),
away_team = case_when(
away_team == "FLA" ~ "MIA",
away_team == "KC" ~ "KCR",
away_team == "SD" ~ "SDP",
away_team == "SF" ~ "SFG",
away_team == "TB" ~ "TBR",
TRUE ~ away_team),
# runner status
run_on_1b = ifelse(on_1b == "0", NA, on_1b),
run_on_2b = ifelse(on_2b == "0", NA, on_2b),
run_on_3b = ifelse(on_3b == "0", NA, on_3b),
# pitch information
is_bip = ifelse(type == "X", 1, 0),
is_stk = ifelse(type == "S", 1, 0),
# baseout state before PA event
basecode_before = case_when(
is.na(run_on_1b) & is.na(run_on_2b) & is.na(run_on_3b) ~ "000",
is.na(run_on_1b) & is.na(run_on_2b) ~ "001",
is.na(run_on_1b) & is.na(run_on_3b) ~ "010",
is.na(run_on_2b) & is.na(run_on_3b) ~ "100",
is.na(run_on_3b) ~ "110",
is.na(run_on_2b) ~ "101",
is.na(run_on_1b) ~ "011",
TRUE ~ "111")) %>%
rename(vis_team = away_team,
batterid = batter,
pitcherid = pitcher,
event_type = events,
event_description = des,
pitch_description = description,
outs_before = outs_when_up,
hit_distance = hit_distance_sc,
pa_number = at_bat_number,
bat_score_before = bat_score,
gameid = game_pk,
field_score = fld_score,
release_spin = release_spin_rate) %>%
arrange(game_date, gameid, pa_number, pitch_number)
return(df1)
}
plays <- format_statcast(df)
#making a table of the max score to end each inning
maxinningscore <- plays %>% group_by(gameid,inning,inning_topbot) %>%
summarise(inning_max_score=max(post_bat_score))
#creating a run expectancy table
retable<-left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(outs_before,basecode_before) %>%
summarise(re=mean(inning_max_score-bat_score_before)) %>%
ungroup()
#calculating the average starting run expectancy
starting_re <- left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL") %>%
select(event_type,outs_before,basecode_before),
retable,
by=c("outs_before","basecode_before")) %>%
group_by(event_type) %>%
summarise(starting_re=mean(re)) %>%
ungroup()
#recreating the run expextancy table 1 from The Book
RE_T1<-left_join(plays %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore,
by=c("gameid","inning","inning_topbot")) %>%
group_by(event_type) %>%
summarise(n=n(),runs=sum(inning_max_score-bat_score_before),ave_runs=runs/n) %>%
arrange(desc(ave_runs)) %>%
ungroup()
#recreating the run expextancy table 2 from The Book
RE_T2 <- left_join(RE_T1,
starting_re,
by=c("event_type"))
#recreating the run expextancy table 3 from The Book
RE_T2 %>% mutate(run_value=(ave_runs-starting_re)) %>%
arrange(desc(run_value)) %>%
gt() %>%
fmt_number(
columns = c("ave_runs", "starting_re","run_value"),
decimals = 2,
)
#identifying all second out strikeouts
secondout <- plays %>% filter(game_type=='Regular Season',event_type=='strikeout',outs_before==1) %>%
select(event_type, game_type, outs_before, inning, inning_topbot,
gameid, pitch_number, batterid) %>%
arrange(desc(pitch_number)) %>%
group_by(gameid,inning,inning_topbot,batterid) %>%
summarise(fistpitch=min(pitch_number))
#identifying all first out strikeouts
firstout <- plays %>% filter(game_type=='Regular Season',event_type=='strikeout',outs_before==0) %>%
select(event_type, game_type, outs_before, inning, inning_topbot,
gameid, pitch_number, batterid) %>%
arrange(desc(pitch_number)) %>%
group_by(gameid,inning,inning_topbot,batterid) %>%
summarise(fistpitch=min(pitch_number))
#identifying all instances of first and second outs as strikouts
firstsec <- semi_join(firstout,secondout, by=c("gameid","inning","inning_topbot")) %>%
mutate(ident=paste0(gameid,inning,inning_topbot,2))
remove(firstout,secondout)
plays %>% filter(gameid %in% firstsec)
plays %>% filter(gameid %in% firstsec$gameid)
plays %>% mutate(ident=paste0(gameid,inning,inning_topbot,outs_before)) %>%
filter(!ident %in% firstsec$ident)
#making a table of the max score to end each inning
maxinningscore1 <- plays1 %>% group_by(gameid,inning,inning_topbot) %>%
summarise(inning_max_score=max(post_bat_score))
plays1 <- plays %>% mutate(ident=paste0(gameid,inning,inning_topbot,outs_before)) %>%
filter(!ident %in% firstsec$ident)
#making a table of the max score to end each inning
maxinningscore1 <- plays1 %>% group_by(gameid,inning,inning_topbot) %>%
summarise(inning_max_score=max(post_bat_score))
#creating a run expectancy table
retable1<-left_join(plays1 %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore1,
by=c("gameid","inning","inning_topbot")) %>%
group_by(outs_before,basecode_before) %>%
summarise(re=mean(inning_max_score-bat_score_before)) %>%
ungroup()
View(retable)
View(retable1)
#calculating the average starting run expectancy
starting_re1 <- left_join(plays1 %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL") %>%
select(event_type,outs_before,basecode_before),
retable1,
by=c("outs_before","basecode_before")) %>%
group_by(event_type) %>%
summarise(starting_re=mean(re)) %>%
ungroup()
#recreating the run expextancy table 1 from The Book
RE_T11<-left_join(playsq %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore1,
by=c("gameid","inning","inning_topbot")) %>%
group_by(event_type) %>%
summarise(n=n(),runs=sum(inning_max_score-bat_score_before),ave_runs=runs/n) %>%
arrange(desc(ave_runs)) %>%
ungroup()
#recreating the run expextancy table 1 from The Book
RE_T11<-left_join(plays1 %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL"),
maxinningscore1,
by=c("gameid","inning","inning_topbot")) %>%
group_by(event_type) %>%
summarise(n=n(),runs=sum(inning_max_score-bat_score_before),ave_runs=runs/n) %>%
arrange(desc(ave_runs)) %>%
ungroup()
View(RE_T11)
View(RE_T1)
View(retable)
#calculating the average starting run expectancy
starting_re1 <- left_join(plays1 %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL") %>%
select(event_type,outs_before,basecode_before),
retable1,
by=c("outs_before","basecode_before")) %>%
group_by(event_type) %>%
summarise(starting_re=mean(re)) %>%
ungroup()
#calculating the average starting run expectancy
starting_re1 <- left_join(plays1 %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL") %>%
select(event_type,outs_before,basecode_before),
retable1,
by=c("outs_before","basecode_before")) %>%
group_by(event_type) %>%
summarise(starting_re=mean(re)) %>%
ungroup()
#recreating the run expextancy table 2 from The Book
RE_T21 <- left_join(RE_T11,
starting_re1,
by=c("event_type"))
left_join(plays1 %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL") %>%
select(event_type,outs_before,basecode_before),
retable1,
by=c("outs_before","basecode_before")) %>%
group_by(event_type) %>%
summarise(starting_re=mean(re)) %>%
ungroup()
remove(df)
#calculating the average starting run expectancy
starting_re1 <- left_join(plays1 %>% filter(game_type=="Regular Season",inning<9,event_type!="NA",
home_team!="COL") %>%
select(event_type,outs_before,basecode_before),
retable1,
by=c("outs_before","basecode_before")) %>%
group_by(event_type) %>%
summarise(starting_re=mean(re)) %>%
ungroup()
#recreating the run expextancy table 3 from The Book
RE_T2 %>% mutate(run_value=(ave_runs-starting_re)) %>%
arrange(desc(run_value)) %>%
gt() %>%
fmt_number(
columns = c("ave_runs", "starting_re","run_value"),
decimals = 2,
)
